<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cart Page</title>
    <style>
        /* General Reset */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Arial', sans-serif;
            background-color: #f5f5f5;
            color: #333;
            line-height: 1.6;
        }

        header {
            background-color: #3f51b5;
            color: white;
            padding: 20px 0;
            text-align: center;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        header h1 {
            font-size: 36px;
        }

        .cart-container {
            padding: 20px;
        }

        .cart-item {
            display: flex;
            align-items: center;
            background-color: white;
            padding: 15px;
            margin-bottom: 15px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .cart-item img {
            width: 100px;
            height: 100px;
            object-fit: cover;
            border-radius: 8px;
            margin-right: 20px;
        }

        .cart-item h3 {
            flex: 1;
            font-size: 20px;
        }

        .cart-item p {
            font-size: 18px;
            margin-top: 5px;
        }

        .cart-item button {
            background-color: #ff4747;
            color: white;
            padding: 10px 15px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .cart-item button:hover {
            background-color: #e13b3b;
        }

        .proceed-btn {
            background-color: #4CAF50;
            color: white;
            padding: 15px 25px;
            border: none;
            border-radius: 30px;
            font-size: 20px;
            width: 100%;
            cursor: pointer;
            text-align: center;
            margin-top: 20px;
        }

        .proceed-btn:hover {
            background-color: #45a049;
        }

        footer {
            background-color: #333;
            color: white;
            text-align: center;
            padding: 15px 0;
            margin-top: 50px;
        }

        .empty-cart-message {
            text-align: center;
            font-size: 24px;
            color: #555;
        }

    </style>
</head>
<body>

    <header>
        <h1>Your Cart</h1>
    </header>

    <div class="cart-container" id="cart-list">
        <!-- Cart items will be dynamically displayed here -->
    </div>

    <button class="proceed-btn" onclick="proceedToBuy()">Proceed to Buy</button>

    <footer>
        <p>&copy; 2025 My E-Commerce Store</p>
    </footer>

    <script>
        // Function to render the cart page
        function renderCart() {
            const cartList = document.getElementById("cart-list");

            // Retrieve the cart from localStorage
            let cart = JSON.parse(localStorage.getItem('cart')) || [];

            // Check if cart is empty
            if (cart.length === 0) {
                cartList.innerHTML = "<p class='empty-cart-message'>Your cart is empty.</p>";
            } else {
                cartList.innerHTML = ""; // Clear any existing cart content

                // Loop through each item in the cart
                cart.forEach(item => {
                    const cartItemDiv = document.createElement("div");
                    cartItemDiv.classList.add("cart-item");

                    cartItemDiv.innerHTML = `
                        <img src="${item.image}" alt="${item.name}">
                        <div>
                            <h3>${item.name}</h3>
                            <p>Price: $${item.price}</p>
                            <button onclick="removeFromCart('${item.name}')">Remove</button>
                        </div>
                    `;

                    cartList.appendChild(cartItemDiv);
                });
            }
        }

        // Function to remove an item from the cart
        function removeFromCart(itemName) {
            let cart = JSON.parse(localStorage.getItem('cart')) || [];

            // Filter out the item to be removed
            cart = cart.filter(item => item.name !== itemName);

            // Save the updated cart back to localStorage
            localStorage.setItem('cart', JSON.stringify(cart));

            // Re-render the cart page
            renderCart();
        }

        // Function to handle the "Proceed to Buy" action
        function proceedToBuy() {
            let cart = JSON.parse(localStorage.getItem('cart')) || [];

            if (cart.length === 0) {
                alert("Your cart is empty! Please add items to your cart before proceeding.");
                return;
            }

            // Simulate a checkout process (e.g., redirect to a checkout page)
            // For now, we'll just clear the cart and alert the user
            localStorage.removeItem('cart'); // Clear the cart

            alert("Thank you for your purchase! Your cart has been cleared.");
            window.location.href = "checkout.html"; // Redirect to a checkout page (you can create this page separately)
        }

        // Initial call to render the cart
        renderCart();
    </script>

</body>
</html>
